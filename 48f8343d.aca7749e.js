(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{154:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),u=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=u(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,m=b["".concat(c,".").concat(d)]||b[d]||s[d]||a;return n?i.a.createElement(m,o(o({ref:t},p),{},{components:n})):i.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var p=2;p<a;p++)c[p]=n[p];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),i=n(7),a=(n(0),n(154)),c={id:"net.middleware",title:"Net.Middleware Namespace",sidebar_label:"Net.Middleware",slug:"/api/middleware"},o={unversionedId:"api/net.middleware",id:"version-2.1.x/api/net.middleware",isDocsHomePage:!1,title:"Net.Middleware Namespace",description:"TypeChecking",source:"@site/versioned_docs/version-2.1.x/api/net-middleware.md",slug:"/api/middleware",permalink:"/docs/2.1/api/middleware",editUrl:"https://github.com/roblox-aurora/rbx-net/edit/main/docs/versioned_docs/version-2.1.x/api/net-middleware.md",version:"2.1.x",sidebar_label:"Net.Middleware",sidebar:"docs",previous:{title:"Net.Definitions Namespace",permalink:"/docs/2.1/api/definitions"}},l=[{value:"TypeChecking",id:"typechecking",children:[{value:"Basic Type Checker",id:"basic-type-checker",children:[]}]},{value:"RateLimit",id:"ratelimit",children:[]},{value:"Logging",id:"logging",children:[]}],p={toc:l};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"typechecking"},"TypeChecking"),Object(a.b)("h3",{id:"basic-type-checker"},"Basic Type Checker"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"function TypeChecking(...checks: TypeCheck[]): TypeCheckingMiddleware\n")),Object(a.b)("p",null,"Function"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Parameters",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"...checks")," Type checking functions in order of the arguments passed to the remote")))),Object(a.b)("h2",{id:"ratelimit"},"RateLimit"),Object(a.b)("p",null,"The built-in rate limiting middleware."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"interface RateLimitError {\n    Message: string;\n    UserId: number;\n    RemoteId: string;\n    MaxRequestsPerMinute: number;\n}\ninterface RateLimitOptions {\n    MaxRequestsPerMinute: number;\n    ErrorHandler?: (error: RateLimitError) => void;\n}\nfunction RateLimit(options: RateLimitOptions): RateLimitingMiddleware\n")),Object(a.b)("p",null,"Function"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Parameters",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"options")," The options for the rate limiter")))),Object(a.b)("h2",{id:"logging"},"Logging"),Object(a.b)("p",null,"The built-in logging middleware"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"interface LoggingOptions {\n    Name?: string;\n    Logger?: (name: string, args: unknown[]) => void;\n}\nfunction Logging(options?: LoggingOptions): LoggerMiddleware\n")),Object(a.b)("p",null,"Function"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Parameters",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"options")," The options for the logger")))))}u.isMDXComponent=!0}}]);