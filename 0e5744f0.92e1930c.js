(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{154:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,d=p["".concat(i,".").concat(b)]||p[b]||m[b]||o;return n?a.a.createElement(d,s(s({ref:t},l),{},{components:n})):a.a.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(154)),i={id:"uuid",title:"Using Compile Time Remote IDs",sidebar_label:"Compile-time Remote IDs",slug:"/uuid"},s={unversionedId:"guides/uuid",id:"guides/uuid",isDocsHomePage:!1,title:"Using Compile Time Remote IDs",description:"This functionality is only available to roblox-ts users. This is not possible in regular Luau.",source:"@site/docs/guides/uuid.md",slug:"/uuid",permalink:"/docs/3.0/uuid",editUrl:"https://github.com/roblox-aurora/rbx-net/edit/main/docs/docs/guides/uuid.md",version:"current",sidebar_label:"Compile-time Remote IDs",sidebar:"docs",previous:{title:"Experience-based events",permalink:"/docs/3.0/definitions/experience"},next:{title:"Wrapping Custom Player Objects",permalink:"/docs/3.0/custom-player-objects"}},c=[{value:"Installation",id:"installation",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"TypeScript Only")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"This functionality is only available to roblox-ts users. This is not possible in regular Luau."))),Object(o.b)("p",null,"This method uses a transformer called ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/roblox-aurora/rbxts-transform-guid"}),Object(o.b)("inlineCode",{parentName:"a"},"rbxts-transform-guid"))," and is quite experimental."),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm i -D rbxts-transform-guid\n")),Object(o.b)("p",null,"Once installed, you will need to configure it in your tsconfig.json under ",Object(o.b)("inlineCode",{parentName:"p"},"plugins"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n    "compilerOptions": {\n        // ..\n        "plugins": [\n            // ...\n            {\n                "transform": "rbxts-transform-env",\n                "EXPERIMENTAL_JSDocConstEnumUUID": true\n            }\n        ]\n    }\n}\n')),Object(o.b)("p",null,"Then if you want to create remote ids, you create a ",Object(o.b)("inlineCode",{parentName:"p"},"const enum")," like such:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'/**\n * @uuid\n */\nexport const enum RemoteId {\n    GetPlayerInventory = "GetPlayerInventory"\n}\n')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"uuid")," is important here, it's what tells our transformer to convert our enum values to guids at compile time."),Object(o.b)("p",null,"Then in your definition file you can use it as such:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/shared/remotes.ts"',title:'"src/shared/remotes.ts"'}),'import Net from "@rbxts/net";\n\n/**\n * @uuid\n */\nexport const enum RemoteId {\n    GetPlayerInventory = "GetPlayerInventory"\n}\n\nconst Remotes = Net.CreateDefinitions({\n    [RemoteId.GetPlayerInventory]: Net.Definitions.ServerAsyncFunction<() => InventorySlot[]>(),\n});\n\nexport default Remotes;\n')),Object(o.b)("p",null,"Then you can use it as such:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="src/server/example.server.ts"',title:'"src/server/example.server.ts"'}),'import Remotes, { RemoteId } from "src/shared/remotes";\n\nconst getPlayerInventory = Remotes.Server.Get(RemoteId.GetPlayerInventory);\n// ...\n')))}u.isMDXComponent=!0}}]);