(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{116:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(113),i=n(100),c=n(60),l=n.n(c),s=37,u=39;var m=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,m=e.values,b=e.groupId,d=e.className,h=Object(o.a)(),f=h.tabGroupChoices,v=h.setTabGroupChoices,p=Object(a.useState)(c),g=p[0],O=p[1],j=a.Children.toArray(e.children);if(null!=b){var w=f[b];null!=w&&w!==g&&m.some((function(e){return e.value===w}))&&O(w)}var y=function(e){O(e),null!=b&&v(b,e)},x=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n},d)},m.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e)},onFocus:function(){return y(t)},onClick:function(){y(t)}},n)}))),t?Object(a.cloneElement)(j.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},j.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))},b=n(3);var d=function(e){var t=e.children,n=e.hidden,a=e.className;return r.a.createElement("div",Object(b.a)({role:"tabpanel"},{hidden:n,className:a}),t)};t.a=function(e){var t=e.children,n=t[0],a=t[1];return console.log(n,a),r.a.createElement(m,{defaultValue:"ts",groupId:"code",values:[{label:"roblox-ts",value:"ts"},{label:"luau",value:"lua"}]},r.a.createElement(d,{value:"ts"},n),r.a.createElement(d,{value:"lua"},a))}},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return m}));var a=n(3),r=n(7),o=(n(0),n(103)),i=n(116),c={id:"throttling",title:"Throttling",sidebar_label:"Throttling",slug:"/throttling"},l={unversionedId:"throttling",id:"version-1.3.0/throttling",isDocsHomePage:!1,title:"Throttling",description:"When using remotes in Roblox, you might want to limit the amount of times a user can send a request to a remote event or remote function.",source:"@site/versioned_docs/version-1.3.0/throttling.md",slug:"/throttling",permalink:"/rbx-net/docs/1.3.x/throttling",editUrl:"https://github.com/roblox-aurora/rbx-net/edit/main/docs/versioned_docs/version-1.3.0/throttling.md",version:"1.3.0",sidebar_label:"Throttling",sidebar:"docs",previous:{title:"Caching",permalink:"/rbx-net/docs/1.3.x/caching"}},s=[{value:"Basic Usage",id:"basic-usage",children:[]}],u={toc:s};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"When using remotes in Roblox, you might want to limit the amount of times a user can send a request to a remote event or remote function."),Object(o.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(o.b)("p",null,"Say for example we have a remote object that fetches a list of items. Ideally we wouldn't want the user to be able to continuously spam it."),Object(o.b)(i.a,{mdxType:"Code"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),'const fetchItemList = new Net.ServerFunction("FetchItemList");\nfetchItemList.SetRateLimit(1);\nfetchItemList.SetCallback((player) => {\n    // ...\n    return data;\n});\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-lua"}),'local fetchItemList = Net.ServerFunction.new("FetchItemList")\nfetchItemList:SetRateLimit(1)\nfetchItemList:SetCallback(function(player)\n    -- ...\n    return data\nend)\n'))),Object(o.b)("p",null,"What the above does, is it creates a server function and then sets a limit of 1 request per minute."))}m.isMDXComponent=!0}}]);