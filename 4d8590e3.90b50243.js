(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{111:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=i.a.createContext({}),p=function(e){var t=i.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,b=u["".concat(o,".").concat(m)]||u[m]||s[m]||a;return r?i.a.createElement(b,c(c({ref:t},d),{},{components:r})):i.a.createElement(b,c({ref:t},d))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var d=2;d<a;d++)o[d]=r[d];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},83:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),i=r(7),a=(r(0),r(111)),o={id:"net.middleware",title:"Net.Middleware Namespace",sidebar_label:"Net.Middleware",slug:"/api/middleware"},c={unversionedId:"api/net.middleware",id:"api/net.middleware",isDocsHomePage:!1,title:"Net.Middleware Namespace",description:"TypeChecking",source:"@site/docs/api/net-middleware.md",slug:"/api/middleware",permalink:"/rbx-net/docs/2.x/api/middleware",editUrl:"https://github.com/roblox-aurora/rbx-net/edit/main/docs/docs/api/net-middleware.md",version:"current",sidebar_label:"Net.Middleware",sidebar:"docs",previous:{title:"Net.Definitions Namespace",permalink:"/rbx-net/docs/2.x/api/definitions"}},l=[{value:"TypeChecking",id:"typechecking",children:[]},{value:"RateLimit",id:"ratelimit",children:[]},{value:"Logging",id:"logging",children:[]}],d={toc:l};function p(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"typechecking"},"TypeChecking"),Object(a.b)("p",null,"The built-in runtime type checking middleware"),Object(a.b)("h2",{id:"ratelimit"},"RateLimit"),Object(a.b)("p",null,"The built-in rate limiting middleware."),Object(a.b)("h2",{id:"logging"},"Logging"),Object(a.b)("p",null,"The built-in logging middleware"))}p.isMDXComponent=!0}}]);