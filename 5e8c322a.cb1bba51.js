(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),b=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=b(n),p=i,m=d["".concat(c,".").concat(p)]||d[p]||u[p]||a;return n?r.a.createElement(m,l(l({ref:t},o),{},{components:n})):r.a.createElement(m,l({ref:t},o))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,c=new Array(a);c[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,c[1]=l;for(var o=2;o<a;o++)c[o]=n[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var i=n(3),r=n(7),a=(n(0),n(108)),c={id:"api",title:"API Overview",sidebar_label:"Overview",slug:"/api"},l={unversionedId:"api/api",id:"api/api",isDocsHomePage:!1,title:"API Overview",description:"This is currently an alpha build of Net. The API is subject to change.",source:"@site/docs/api/index.md",slug:"/api",permalink:"/rbx-net/docs/2.x/api",editUrl:"https://github.com/roblox-aurora/rbx-net/edit/main/docs/docs/api/index.md",version:"current",sidebar_label:"Overview",sidebar:"docs",previous:{title:"Writing custom middleware",permalink:"/rbx-net/docs/2.x/middleware/custom"}},s=[{value:"Net.Server",id:"netserver",children:[{value:"Event",id:"event",children:[]},{value:"Function",id:"function",children:[]},{value:"AsyncFunction",id:"asyncfunction",children:[]},{value:"CrossServerEvent",id:"crossserverevent",children:[]}]},{value:"Net.Client",id:"netclient",children:[{value:"Event",id:"event-1",children:[]},{value:"Function",id:"function-1",children:[]},{value:"AsyncFunction",id:"asyncfunction-1",children:[]},{value:"CrossServerEvent",id:"crossserverevent-1",children:[]}]},{value:"Net.Definitions",id:"netdefinitions",children:[{value:"Create(definitions)",id:"createdefinitions",children:[]},{value:"Function&lt;Server&gt;(...)",id:"functionserver",children:[]},{value:"Event&lt;ServerArgs, ClientArgs&gt;(...)",id:"eventserverargs-clientargs",children:[]},{value:"AsyncFunction&lt;Server, Client&gt;(...)",id:"asyncfunctionserver-client",children:[]}]},{value:"Net.Middleware",id:"netmiddleware",children:[{value:"RateLimit(limit)",id:"ratelimitlimit",children:[]},{value:"RuntimeTypeCheck(...typeCheckers)",id:"runtimetypechecktypecheckers",children:[]}]},{value:"DefinitionBuilder&lt;T&gt;",id:"definitionbuildert",children:[{value:"GetClient(name)",id:"getclientname",children:[]},{value:"CreateServer(name)",id:"createservername",children:[]}]}],o={toc:s};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(a.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Alpha Build")),Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"This is currently an alpha build of Net. The API is subject to change."))),Object(a.b)("h2",{id:"netserver"},"Net.Server"),Object(a.b)("p",null,"This contains all the server-related code relating to Net"),Object(a.b)("h3",{id:"event"},"Event"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class Event\n")),Object(a.b)("h3",{id:"function"},"Function"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class Function\n")),Object(a.b)("h3",{id:"asyncfunction"},"AsyncFunction"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class AsyncFunction\n")),Object(a.b)("h3",{id:"crossserverevent"},"CrossServerEvent"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class CrossServerEvent\n")),Object(a.b)("h2",{id:"netclient"},"Net.Client"),Object(a.b)("p",null,"This contains all the client-related code relating to Net"),Object(a.b)("h3",{id:"event-1"},"Event"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class Event\n")),Object(a.b)("h3",{id:"function-1"},"Function"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class Function\n")),Object(a.b)("h3",{id:"asyncfunction-1"},"AsyncFunction"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class AsyncFunction\n")),Object(a.b)("h3",{id:"crossserverevent-1"},"CrossServerEvent"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class CrossServerEvent\n")),Object(a.b)("h2",{id:"netdefinitions"},"Net.Definitions"),Object(a.b)("p",null,"This namespace is for the Definitions feature."),Object(a.b)("h3",{id:"createdefinitions"},"Create(definitions)"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"function Create<T extends RemoteDeclarations>(remotes: T): DefinitionBuilder<T>\n")),Object(a.b)("p",null,"see ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"#definitionbuildert"}),"DefinitionBuilder")),Object(a.b)("h3",{id:"functionserver"},"Function","<","Server",">","(...)"),Object(a.b)("p",null,"Definition function for creating a ",Object(a.b)("inlineCode",{parentName:"p"},"FunctionDefinition")),Object(a.b)("h3",{id:"eventserverargs-clientargs"},"Event","<","ServerArgs, ClientArgs",">","(...)"),Object(a.b)("p",null,"Definition function for creating an ",Object(a.b)("inlineCode",{parentName:"p"},"EventDefinition")),Object(a.b)("h3",{id:"asyncfunctionserver-client"},"AsyncFunction","<","Server, Client",">","(...)"),Object(a.b)("p",null,"Definition function for creating an ",Object(a.b)("inlineCode",{parentName:"p"},"AsyncDefinition")),Object(a.b)("h2",{id:"netmiddleware"},"Net.Middleware"),Object(a.b)("p",null,"This namespace contains built-in middleware for RbxNet."),Object(a.b)("h3",{id:"ratelimitlimit"},"RateLimit(limit)"),Object(a.b)("h3",{id:"runtimetypechecktypecheckers"},"RuntimeTypeCheck(...typeCheckers)"),Object(a.b)("h2",{id:"definitionbuildert"},"DefinitionBuilder","<","T",">"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"class DefinitionBuilder<T extends RemoteDeclarations> {\n    GetAllClient(): ClientBuildResult<T>;\n    GetClient(name: keyof T): ClientEvent | ClientAsyncFunction | ClientFunction;\n    CreateAllServer(): ServerBuildResult<T>;\n    CreateServer(name: keyof T): ClientEvent | ClientAsyncFunction | ClientFunction;\n}\n")),Object(a.b)("h4",{id:"example-usage"},"Example Usage"),Object(a.b)("p",null,"The definitions should be placed in a shared file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts",metastring:'title="shared/remotes.ts"',title:'"shared/remotes.ts"'}),'import Net from "@rbxts/net";\nconst MyDefinitions = Net.Definitions.Create({\n    TestRemote: Net.Definitions.AsyncFunction<(name: string) => boolean>()\n});\n')),Object(a.b)("h3",{id:"getclientname"},"GetClient(name)"),Object(a.b)("p",null,"Gets the specified remote definition and gets the client version of the event/function/asyncfunction"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts",metastring:'title="client/example.client.ts"',title:'"client/example.client.ts"'}),'import MyDefinitions from "shared/remotes.ts";\nconst TestRemote = MyDefinitions.GetClient("TestRemote");\n')),Object(a.b)("h3",{id:"createservername"},"CreateServer(name)"),Object(a.b)("p",null,"Creates the specified remote definition on the server"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/example.server.ts"',title:'"server/example.server.ts"'}),'import MyDefinitions from "shared/remotes.ts";\nconst TestRemote = MyDefinitions.CreateServer("TestRemote");\n')))}b.isMDXComponent=!0}}]);